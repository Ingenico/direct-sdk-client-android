plugins {
    id 'com.android.library'
    id 'signing'
    id 'maven-publish'
    id 'org.sonarqube'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.onlinepayments.sdk.client.android'

    compileSdkVersion 33

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 33
        versionCode 1
        versionName "2.0.0"
        consumerProguardFiles 'consumer-rules.pro'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lint {
        abortOnError false
        lintConfig file('lint.xml')
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }
}

dependencies {
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'androidx.annotation:annotation:1.6.0'

    // Google pay
    implementation 'com.google.android.gms:play-services-wallet:19.2.0'

    testImplementation 'junit:junit:4.13.2'

    testImplementation 'org.mockito:mockito-core:5.4.0'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

task javadoc(type: Javadoc) {
    dependsOn "generateReleaseRFile"
    failOnError true
    configurations.implementation.setCanBeResolved(true)
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.implementation
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}

afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompileProvider.get().classpath.files
    })
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.release
                artifact sourcesJar
                artifact javadocJar

                groupId = POM_GROUP_ID
                artifactId = POM_ARTIFACT_ID
                version = POM_VERSION
                pom {
                    name = POM_NAME
                    description = POM_DESCRIPTION
                    url = POM_URL

                    organization {
                        name = POM_ORGANIZATION_NAME
                        url = POM_ORGANIZATION_URL
                    }

                    licenses {
                        license {
                            name = POM_LICENSE_NAME
                            url = POM_LICENSE_URL
                        }
                    }

                    developers {
                        developer {
                            name = POM_DEVELOPER_NAME
                            email = POM_DEVELOPER_EMAIL
                            organization = POM_DEVELOPER_ORGANIZATION
                            organizationUrl = POM_DEVELOPER_ORGANIZATIONURL
                        }
                    }

                    issueManagement {
                        system = POM_ISSUEMANAGEMENT_SYSTEM
                        url = POM_ISSUEMANAGEMENT_URL
                    }

                    scm {
                        connection = POM_SCM_CONNECTION
                        developerConnection = POM_SCM_DEVELOPERCONNECTION
                        url = POM_SCM_URL
                    }
                }
            }
        }
    }

    signing {
        sign publishing.publications.mavenJava
    }
}